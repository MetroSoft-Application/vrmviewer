"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (g && (g = 0, op[0] && (_ = 0)), _) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.deactivate = exports.activate = void 0;
var vscode = require("vscode");
var path = require("path");
var fs = require("fs");
/**
 * 拡張機能がアクティブになったときに呼び出される
 */
function activate(context) {
    // VRMエディタプロバイダの登録
    var vrmEditorProvider = new VrmEditorProvider(context);
    context.subscriptions.push(vscode.window.registerCustomEditorProvider('vrmViewer.vrmPreview', vrmEditorProvider, {
        webviewOptions: {
            retainContextWhenHidden: true,
        },
        supportsMultipleEditorsPerDocument: false,
    }));
    console.log('VRM Viewer 拡張機能がアクティブになりました');
}
exports.activate = activate;
/**
 * 拡張機能が非アクティブになったときに呼び出される
 */
function deactivate() { }
exports.deactivate = deactivate;
/**
 * VRMファイルを表示するためのカスタムエディタプロバイダ
 */
var VrmEditorProvider = /** @class */ (function () {
    function VrmEditorProvider(context) {
        this.context = context;
    }
    /**
     * カスタムドキュメントを開く
     */
    VrmEditorProvider.prototype.openCustomDocument = function (uri, openContext, token) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                // 単純なドキュメントを返す
                return [2 /*return*/, { uri: uri, dispose: function () { } }];
            });
        });
    };
    /**
     * カスタムエディタを解決する
     */
    VrmEditorProvider.prototype.resolveCustomEditor = function (document, webviewPanel, token) {
        return __awaiter(this, void 0, void 0, function () {
            var fileData, base64Data, error_1;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        // WebViewを設定
                        webviewPanel.webview.options = {
                            enableScripts: true,
                            localResourceRoots: [
                                vscode.Uri.joinPath(this.context.extensionUri, 'out'),
                                vscode.Uri.joinPath(this.context.extensionUri, 'node_modules'),
                                vscode.Uri.joinPath(this.context.extensionUri, 'resources') // リソースフォルダを追加
                            ]
                        };
                        // HTML内容をセット
                        webviewPanel.webview.html = this.getHtmlForWebview(webviewPanel.webview);
                        _a.label = 1;
                    case 1:
                        _a.trys.push([1, 3, , 4]);
                        return [4 /*yield*/, vscode.workspace.fs.readFile(document.uri)];
                    case 2:
                        fileData = _a.sent();
                        base64Data = Buffer.from(fileData).toString('base64');
                        // データをWebViewに送信
                        webviewPanel.webview.postMessage({
                            type: 'loadVrm',
                            data: base64Data,
                            fileName: path.basename(document.uri.fsPath)
                        });
                        return [3 /*break*/, 4];
                    case 3:
                        error_1 = _a.sent();
                        vscode.window.showErrorMessage("VRM\u30D5\u30A1\u30A4\u30EB\u306E\u8AAD\u307F\u8FBC\u307F\u306B\u5931\u6557\u3057\u307E\u3057\u305F: ".concat(error_1 instanceof Error ? error_1.message : String(error_1)));
                        return [3 /*break*/, 4];
                    case 4:
                        // WebViewからのメッセージを処理
                        webviewPanel.webview.onDidReceiveMessage(function (message) {
                            switch (message.type) {
                                case 'error':
                                    vscode.window.showErrorMessage(message.message);
                                    break;
                                case 'info':
                                    vscode.window.showInformationMessage(message.message);
                                    break;
                                case 'debug':
                                    console.log("\u30C7\u30D0\u30C3\u30B0: ".concat(message.message));
                                    break;
                            }
                        });
                        return [2 /*return*/];
                }
            });
        });
    };
    /**
     * WebView用のHTMLを生成する（CSSとJavaScriptを埋め込み）
     */
    VrmEditorProvider.prototype.getHtmlForWebview = function (webview) {
        // nonce値を生成してCSP（Content Security Policy）で使用
        var nonce = this.getNonce();
        // リソースフォルダ内のスクリプトのURIを取得
        var threeJsUri = webview.asWebviewUri(vscode.Uri.joinPath(this.context.extensionUri, 'resources', 'libs', 'three', 'three.min.js'));
        var orbitControlsUri = webview.asWebviewUri(vscode.Uri.joinPath(this.context.extensionUri, 'resources', 'libs', 'three', 'OrbitControls.js'));
        var gltfLoaderUri = webview.asWebviewUri(vscode.Uri.joinPath(this.context.extensionUri, 'resources', 'libs', 'three', 'GLTFLoader.js'));
        var vrmUri = webview.asWebviewUri(vscode.Uri.joinPath(this.context.extensionUri, 'resources', 'libs', 'vrm', 'three-vrm.js'));
        // リソースファイルが存在するか確認（デバッグ用）
        var checkFiles = [
            vscode.Uri.joinPath(this.context.extensionUri, 'resources', 'libs', 'three', 'three.min.js'),
            vscode.Uri.joinPath(this.context.extensionUri, 'resources', 'libs', 'three', 'OrbitControls.js'),
            vscode.Uri.joinPath(this.context.extensionUri, 'resources', 'libs', 'three', 'GLTFLoader.js'),
            vscode.Uri.joinPath(this.context.extensionUri, 'resources', 'libs', 'vrm', 'three-vrm.js')
        ];
        // ファイルの存在を確認してログに出力
        for (var _i = 0, checkFiles_1 = checkFiles; _i < checkFiles_1.length; _i++) {
            var fileUri = checkFiles_1[_i];
            try {
                if (fs.existsSync(fileUri.fsPath)) {
                    console.log("\u30D5\u30A1\u30A4\u30EB\u304C\u5B58\u5728\u3057\u307E\u3059: ".concat(fileUri.fsPath));
                }
                else {
                    console.log("\u30D5\u30A1\u30A4\u30EB\u304C\u5B58\u5728\u3057\u307E\u305B\u3093: ".concat(fileUri.fsPath));
                }
            }
            catch (err) {
                console.error("\u30D5\u30A1\u30A4\u30EB\u78BA\u8A8D\u30A8\u30E9\u30FC: ".concat(fileUri.fsPath), err);
            }
        }
        return /* html */ "\n      <!DOCTYPE html>\n      <html lang=\"ja\">\n      <head>\n        <meta charset=\"UTF-8\">\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n        <meta http-equiv=\"Content-Security-Policy\" content=\"default-src 'none'; img-src ".concat(webview.cspSource, " blob: data:; style-src 'unsafe-inline'; script-src 'nonce-").concat(nonce, "' ").concat(webview.cspSource, " 'unsafe-eval';\">\n        <title>VRM Viewer</title>\n        \n        <!-- \u30B9\u30BF\u30A4\u30EB\u3092\u76F4\u63A5\u57CB\u3081\u8FBC\u307F -->\n        <style>\n          body, html {\n            margin: 0;\n            padding: 0;\n            width: 100%;\n            height: 100%;\n            overflow: hidden;\n            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n          }\n          \n          #container {\n            width: 100%;\n            height: 100%;\n            position: relative;\n          }\n          \n          #loading {\n            position: absolute;\n            top: 50%;\n            left: 50%;\n            transform: translate(-50%, -50%);\n            background-color: rgba(0, 0, 0, 0.7);\n            color: white;\n            padding: 10px 20px;\n            border-radius: 5px;\n            z-index: 10;\n          }\n          \n          #info {\n            position: absolute;\n            top: 10px;\n            left: 10px;\n            background-color: rgba(0, 0, 0, 0.7);\n            color: white;\n            padding: 5px 10px;\n            border-radius: 5px;\n            font-size: 12px;\n          }\n          \n          #controls {\n            position: absolute;\n            bottom: 10px;\n            right: 10px;\n          }\n          \n          button {\n            background-color: #0e639c;\n            color: white;\n            border: none;\n            padding: 8px 12px;\n            border-radius: 3px;\n            cursor: pointer;\n            font-size: 12px;\n          }\n          \n          button:hover {\n            background-color: #1177bb;\n          }\n          \n          button:active {\n            background-color: #0d5086;\n          }\n          \n          #error-container {\n            position: absolute;\n            top: 50%;\n            left: 50%;\n            transform: translate(-50%, -50%);\n            background-color: rgba(255, 0, 0, 0.7);\n            color: white;\n            padding: 15px;\n            border-radius: 5px;\n            max-width: 80%;\n            text-align: center;\n            z-index: 20;\n            display: none;\n          }\n          \n          #retry-button {\n            margin-top: 10px;\n            background-color: #ffffff;\n            color: #333;\n          }\n\n          #debug-info {\n            position: absolute;\n            bottom: 10px;\n            left: 10px;\n            color: #666;\n            font-size: 10px;\n            z-index: 5;\n            max-height: 150px;\n            overflow-y: auto;\n            background-color: rgba(255, 255, 255, 0.7);\n            padding: 5px;\n          }\n        </style>\n      </head>\n      <body>\n        <div id=\"container\">\n          <div id=\"loading\">VRM\u30E2\u30C7\u30EB\u3092\u8AAD\u307F\u8FBC\u307F\u4E2D...</div>\n          <div id=\"info\"></div>\n          <div id=\"controls\">\n            <button id=\"reset-camera\">\u30AB\u30E1\u30E9\u30EA\u30BB\u30C3\u30C8</button>\n          </div>\n          <div id=\"error-container\">\n            <div id=\"error-message\"></div>\n            <button id=\"retry-button\">\u518D\u8A66\u884C</button>\n          </div>\n          <div id=\"debug-info\"></div>\n        </div>\n        \n        <!-- Three.js\u30E9\u30A4\u30D6\u30E9\u30EA\u672C\u4F53\u3092\u8AAD\u307F\u8FBC\u307F -->\n        <script nonce=\"").concat(nonce, "\" src=\"").concat(threeJsUri, "\"></script>\n        \n        <!-- \u30B9\u30AF\u30EA\u30D7\u30C8\u8AAD\u307F\u8FBC\u307F\u7528\u306E\u30D8\u30EB\u30D1\u30FC\u95A2\u6570 -->\n        <script nonce=\"").concat(nonce, "\">\n          // VSCode\u306EWebView\u3068\u306E\u901A\u4FE1\u7528\n          const vscode = acquireVsCodeApi();\n          \n          // \u30C7\u30D0\u30C3\u30B0\u60C5\u5831\u8868\u793A\u8981\u7D20\n          const debugInfo = document.getElementById('debug-info');\n          \n          // \u30C7\u30D0\u30C3\u30B0\u306E\u305F\u3081\u306E\u30ED\u30B0\u9001\u4FE1\u95A2\u6570\n          function sendDebugMessage(message) {\n            console.log(message); // Dev\u30C4\u30FC\u30EB\u306E\u30B3\u30F3\u30BD\u30FC\u30EB\u306B\u51FA\u529B\n            debugInfo.textContent += message + '\\n';\n            vscode.postMessage({\n              type: 'debug',\n              message: message\n            });\n          }\n\n          // \u30A8\u30E9\u30FC\u8868\u793A\u7528\u306E\u95A2\u6570\n          function showError(message) {\n            const errorContainer = document.getElementById('error-container');\n            const errorMessage = document.getElementById('error-message');\n            document.getElementById('loading').style.display = 'none';\n            errorMessage.textContent = message;\n            errorContainer.style.display = 'block';\n            \n            // \u30A8\u30E9\u30FC\u30E1\u30C3\u30BB\u30FC\u30B8\u3092\u62E1\u5F35\u6A5F\u80FD\u306B\u9001\u4FE1\n            vscode.postMessage({\n              type: 'error',\n              message: message\n            });\n          }\n\n          // THREE\u30AA\u30D6\u30B8\u30A7\u30AF\u30C8\u304C\u6B63\u3057\u304F\u8AAD\u307F\u8FBC\u307E\u308C\u3066\u3044\u308B\u304B\u78BA\u8A8D\n          if (typeof THREE === 'undefined') {\n            showError('THREE \u30AA\u30D6\u30B8\u30A7\u30AF\u30C8\u304C\u521D\u671F\u5316\u3055\u308C\u3066\u3044\u307E\u305B\u3093\u3002Three.js\u306E\u8AAD\u307F\u8FBC\u307F\u306B\u554F\u984C\u304C\u3042\u308A\u307E\u3059\u3002');\n          } else {\n            sendDebugMessage('Three.js \u304C\u6B63\u5E38\u306B\u8AAD\u307F\u8FBC\u307E\u308C\u307E\u3057\u305F');\n            \n            // OrbitControls\u3092\u76F4\u63A5\u30A4\u30F3\u30E9\u30A4\u30F3\u3067\u5B9A\u7FA9\uFF08Three.js\u306E\u4F9D\u5B58\u304C\u3042\u308B\u305F\u3081\u3001Three.js\u8AAD\u307F\u8FBC\u307F\u5F8C\u306B\u5B9F\u884C\uFF09\n            try {\n              // OrbitControls\u306E\u57FA\u672C\u6A5F\u80FD\u3092\u76F4\u63A5\u5B9A\u7FA9\uFF08\u7C21\u6613\u7248\uFF09\n              THREE.OrbitControls = function(camera, domElement) {\n                this.camera = camera;\n                this.domElement = domElement || document;\n                this.target = new THREE.Vector3();\n                this.enableDamping = false;\n                this.dampingFactor = 0.05;\n                this.enabled = true;\n                \n                var scope = this;\n                var STATE = { NONE: -1, ROTATE: 0, DOLLY: 1, PAN: 2 };\n                var state = STATE.NONE;\n                var EPS = 0.000001;\n                \n                var rotateStart = new THREE.Vector2();\n                var rotateEnd = new THREE.Vector2();\n                var rotateDelta = new THREE.Vector2();\n                \n                var dollyStart = new THREE.Vector2();\n                var dollyEnd = new THREE.Vector2();\n                var dollyDelta = new THREE.Vector2();\n                \n                var panStart = new THREE.Vector2();\n                var panEnd = new THREE.Vector2();\n                var panDelta = new THREE.Vector2();\n                \n                var phiDelta = 0;\n                var thetaDelta = 0;\n                var scale = 1;\n                \n                function rotateLeft(angle) {\n                  thetaDelta -= angle;\n                }\n                \n                function rotateUp(angle) {\n                  phiDelta -= angle;\n                }\n                \n                var position = new THREE.Vector3();\n                var offset = new THREE.Vector3();\n                var lastPosition = new THREE.Vector3();\n                \n                this.update = function() {\n                  if (!scope.enabled) return;\n                  \n                  position.copy(this.camera.position);\n                  \n                  // \u8996\u70B9\u306E\u56DE\u8EE2\u3092\u66F4\u65B0\n                  offset.copy(position).sub(this.target);\n                  var theta = Math.atan2(offset.x, offset.z);\n                  var phi = Math.atan2(Math.sqrt(offset.x * offset.x + offset.z * offset.z), offset.y);\n                  \n                  theta += thetaDelta;\n                  phi += phiDelta;\n                  \n                  phi = Math.max(EPS, Math.min(Math.PI - EPS, phi));\n                  \n                  var radius = offset.length() * scale;\n                  \n                  offset.x = radius * Math.sin(phi) * Math.sin(theta);\n                  offset.y = radius * Math.cos(phi);\n                  offset.z = radius * Math.sin(phi) * Math.cos(theta);\n                  \n                  position.copy(this.target).add(offset);\n                  this.camera.position.copy(position);\n                  \n                  // \u30C0\u30F3\u30D4\u30F3\u30B0\u3092\u9069\u7528\n                  if (this.enableDamping) {\n                    thetaDelta *= (1 - this.dampingFactor);\n                    phiDelta *= (1 - this.dampingFactor);\n                    scale = 1 + (scale - 1) * (1 - this.dampingFactor);\n                  } else {\n                    thetaDelta = 0;\n                    phiDelta = 0;\n                    scale = 1;\n                  }\n                  \n                  // \u30AB\u30E1\u30E9\u306E\u66F4\u65B0\u5B8C\u4E86\n                  this.camera.lookAt(this.target);\n                };\n                \n                function onMouseDown(event) {\n                  if (!scope.enabled) return;\n                  \n                  event.preventDefault();\n                  \n                  if (event.button === 0) {\n                    state = STATE.ROTATE;\n                    rotateStart.set(event.clientX, event.clientY);\n                  } else if (event.button === 1) {\n                    state = STATE.DOLLY;\n                    dollyStart.set(event.clientX, event.clientY);\n                  } else if (event.button === 2) {\n                    state = STATE.PAN;\n                    panStart.set(event.clientX, event.clientY);\n                  }\n                  \n                  document.addEventListener('mousemove', onMouseMove, false);\n                  document.addEventListener('mouseup', onMouseUp, false);\n                }\n                \n                function onMouseMove(event) {\n                  if (!scope.enabled) return;\n                  \n                  event.preventDefault();\n                  \n                  if (state === STATE.ROTATE) {\n                    rotateEnd.set(event.clientX, event.clientY);\n                    rotateDelta.subVectors(rotateEnd, rotateStart);\n                    \n                    var element = scope.domElement === document ? scope.domElement.body : scope.domElement;\n                    \n                    // \u56DE\u8EE2\u306E\u8A08\u7B97\n                    rotateLeft(2 * Math.PI * rotateDelta.x / element.clientWidth);\n                    rotateUp(2 * Math.PI * rotateDelta.y / element.clientHeight);\n                    \n                    rotateStart.copy(rotateEnd);\n                  } else if (state === STATE.DOLLY) {\n                    dollyEnd.set(event.clientX, event.clientY);\n                    dollyDelta.subVectors(dollyEnd, dollyStart);\n                    \n                    if (dollyDelta.y > 0) {\n                      scale /= 1.1;\n                    } else if (dollyDelta.y < 0) {\n                      scale *= 1.1;\n                    }\n                    \n                    dollyStart.copy(dollyEnd);\n                  }\n                  \n                  scope.update();\n                }\n                \n                function onMouseUp(event) {\n                  if (!scope.enabled) return;\n                  \n                  document.removeEventListener('mousemove', onMouseMove, false);\n                  document.removeEventListener('mouseup', onMouseUp, false);\n                  \n                  state = STATE.NONE;\n                }\n                \n                function onMouseWheel(event) {\n                  if (!scope.enabled) return;\n                  \n                  event.preventDefault();\n                  \n                  var delta = 0;\n                  \n                  if (event.wheelDelta !== undefined) {\n                    // WebKit\u3084Chrome\n                    delta = event.wheelDelta;\n                  } else if (event.detail !== undefined) {\n                    // Firefox\n                    delta = -event.detail;\n                  }\n                  \n                  if (delta > 0) {\n                    scale /= 1.1;\n                  } else {\n                    scale *= 1.1;\n                  }\n                  \n                  scope.update();\n                }\n                \n                this.domElement.addEventListener('contextmenu', function(event) { event.preventDefault(); }, false);\n                this.domElement.addEventListener('mousedown', onMouseDown, false);\n                this.domElement.addEventListener('mousewheel', onMouseWheel, false);\n                this.domElement.addEventListener('DOMMouseScroll', onMouseWheel, false); // Firefox\n              };\n              \n              sendDebugMessage('OrbitControls \u3092\u624B\u52D5\u3067\u767B\u9332\u3057\u307E\u3057\u305F');\n            } catch (error) {\n              sendDebugMessage(`OrbitControls\u306E\u624B\u52D5\u767B\u9332\u306B\u5931\u6557\u3057\u307E\u3057\u305F: ${error.message}`);\n            }\n            \n            // GLTFLoader\u3092\u8AAD\u307F\u8FBC\u307F\n            loadScript('").concat(gltfLoaderUri, "', () => {\n              sendDebugMessage('GLTFLoader \u304C\u6B63\u5E38\u306B\u8AAD\u307F\u8FBC\u307E\u308C\u307E\u3057\u305F');\n              \n              // VRM\u30E9\u30A4\u30D6\u30E9\u30EA\u3092\u8AAD\u307F\u8FBC\u307F\n              loadScript('").concat(vrmUri, "', () => {\n                sendDebugMessage('VRM \u30E9\u30A4\u30D6\u30E9\u30EA\u304C\u6B63\u5E38\u306B\u8AAD\u307F\u8FBC\u307E\u308C\u307E\u3057\u305F');\n                \n                // \u5168\u3066\u306E\u30E9\u30A4\u30D6\u30E9\u30EA\u306E\u8AAD\u307F\u8FBC\u307F\u304C\u6210\u529F\u3057\u305F\u3089\u3001\u30D3\u30E5\u30FC\u30EF\u3092\u521D\u671F\u5316\n                initializeViewer();\n              }, (error) => {\n                showError('VRM\u30E9\u30A4\u30D6\u30E9\u30EA\u306E\u8AAD\u307F\u8FBC\u307F\u306B\u5931\u6557\u3057\u307E\u3057\u305F');\n              });\n            }, (error) => {\n              showError('GLTFLoader\u306E\u8AAD\u307F\u8FBC\u307F\u306B\u5931\u6557\u3057\u307E\u3057\u305F');\n            });\n          }\n\n          // \u5404\u30B9\u30AF\u30EA\u30D7\u30C8\u306E\u8AAD\u307F\u8FBC\u307F\u95A2\u6570\n          function loadScript(url, onSuccess, onError) {\n            sendDebugMessage(`\u30B9\u30AF\u30EA\u30D7\u30C8\u3092\u8AAD\u307F\u8FBC\u307F\u307E\u3059: ${url}`);\n            const script = document.createElement('script');\n            script.nonce = \"").concat(nonce, "\";\n            script.src = url;\n            \n            script.onload = () => {\n              sendDebugMessage(`\u30B9\u30AF\u30EA\u30D7\u30C8\u8AAD\u307F\u8FBC\u307F\u6210\u529F: ${url}`);\n              if (onSuccess) onSuccess();\n            };\n            \n            script.onerror = (e) => {\n              sendDebugMessage(`\u30B9\u30AF\u30EA\u30D7\u30C8\u8AAD\u307F\u8FBC\u307F\u5931\u6557: ${url}`);\n              if (onError) onError(e);\n            };\n            \n            document.head.appendChild(script);\n          }\n\n          // \u518D\u8A66\u884C\u30DC\u30BF\u30F3\u306E\u30A4\u30D9\u30F3\u30C8\u30EA\u30B9\u30CA\u30FC\n          document.getElementById('retry-button').addEventListener('click', () => {\n            document.getElementById('error-container').style.display = 'none';\n            document.getElementById('loading').style.display = 'block';\n            document.getElementById('loading').textContent = '\u30E9\u30A4\u30D6\u30E9\u30EA\u3092\u518D\u8AAD\u307F\u8FBC\u307F\u4E2D...';\n            \n            // \u30DA\u30FC\u30B8\u3092\u30EA\u30ED\u30FC\u30C9\n            location.reload();\n          });\n          \n          // Three.js\u30D3\u30E5\u30FC\u30EF\u30FC\u306E\u521D\u671F\u5316\n          function initializeViewer() {\n            try {\n              // THREE \u30AA\u30D6\u30B8\u30A7\u30AF\u30C8\u304C\u5B58\u5728\u3059\u308B\u304B\u30C1\u30A7\u30C3\u30AF\n              if (typeof THREE === 'undefined') {\n                throw new Error('THREE \u30AA\u30D6\u30B8\u30A7\u30AF\u30C8\u304C\u521D\u671F\u5316\u3055\u308C\u3066\u3044\u307E\u305B\u3093');\n              }\n              \n              // OrbitControls\u304C\u5B58\u5728\u3059\u308B\u304B\u30C1\u30A7\u30C3\u30AF\n              if (typeof THREE.OrbitControls === 'undefined') {\n                throw new Error('THREE.OrbitControls \u304C\u898B\u3064\u304B\u308A\u307E\u305B\u3093');\n              }\n              \n              // GLTFLoader\u304C\u5B58\u5728\u3059\u308B\u304B\u30C1\u30A7\u30C3\u30AF\n              if (typeof THREE.GLTFLoader === 'undefined') {\n                throw new Error('THREE.GLTFLoader \u304C\u898B\u3064\u304B\u308A\u307E\u305B\u3093');\n              }\n              \n              sendDebugMessage('\u5168\u3066\u306E\u30E9\u30A4\u30D6\u30E9\u30EA\u304C\u6B63\u5E38\u306B\u8AAD\u307F\u8FBC\u307E\u308C\u307E\u3057\u305F');\n              \n              // Three.js\u95A2\u9023\u306E\u5909\u6570\n              let container;\n              let camera, scene, renderer;\n              let controls;\n              let currentVrm;\n              let loadingElement;\n              let infoElement;\n              let errorContainer;\n              let errorMessage;\n              \n              // \u521D\u671F\u5316\n              init();\n              \n              // \u30E1\u30C3\u30BB\u30FC\u30B8\u30CF\u30F3\u30C9\u30E9\u306E\u767B\u9332\uFF08\u62E1\u5F35\u6A5F\u80FD\u304B\u3089\u306E\u30E1\u30C3\u30BB\u30FC\u30B8\u3092\u53D7\u4FE1\uFF09\n              window.addEventListener('message', event => {\n                const message = event.data;\n                switch (message.type) {\n                  case 'loadVrm':\n                    loadVrmFromBase64(message.data, message.fileName);\n                    break;\n                }\n              });\n              \n              // \u30EA\u30BB\u30C3\u30C8\u30DC\u30BF\u30F3\u306E\u30A4\u30D9\u30F3\u30C8\u30EA\u30B9\u30CA\u30FC\n              document.getElementById('reset-camera').addEventListener('click', resetCamera);\n              \n              // Three.js\u306E\u521D\u671F\u5316\n              function init() {\n                sendDebugMessage('Three.js \u521D\u671F\u5316\u958B\u59CB');\n                container = document.getElementById('container');\n                loadingElement = document.getElementById('loading');\n                infoElement = document.getElementById('info');\n                errorContainer = document.getElementById('error-container');\n                errorMessage = document.getElementById('error-message');\n                \n                // \u30B7\u30FC\u30F3\u4F5C\u6210\n                scene = new THREE.Scene();\n                scene.background = new THREE.Color(0x303030);\n                \n                // \u30AB\u30E1\u30E9\u306E\u8A2D\u5B9A\n                camera = new THREE.PerspectiveCamera(45, window.innerWidth / window.innerHeight, 0.1, 1000);\n                camera.position.set(0, 1.5, 3);\n                \n                // \u30E9\u30A4\u30C8\u306E\u8A2D\u5B9A\n                const ambientLight = new THREE.AmbientLight(0xffffff, 0.7);\n                scene.add(ambientLight);\n                \n                const directionalLight = new THREE.DirectionalLight(0xffffff, 1.0);\n                directionalLight.position.set(1, 1, 1);\n                scene.add(directionalLight);\n                \n                // \u30D0\u30C3\u30AF\u30E9\u30A4\u30C8\uFF08\u30E2\u30C7\u30EB\u306E\u8F2A\u90ED\u3092\u898B\u3084\u3059\u304F\u3059\u308B\uFF09\n                const backLight = new THREE.DirectionalLight(0xffffff, 0.3);\n                backLight.position.set(-1, 1, -1);\n                scene.add(backLight);\n                \n                // \u30EC\u30F3\u30C0\u30E9\u30FC\u306E\u8A2D\u5B9A\n                try {\n                  renderer = new THREE.WebGLRenderer({ antialias: true });\n                  renderer.setPixelRatio(window.devicePixelRatio);\n                  renderer.setSize(window.innerWidth, window.innerHeight);\n                  \n                  // three.js r137\u4EE5\u964D\u306FsRGBEncoding\u306E\u4EE3\u308F\u308A\u306BoutputColorSpace\u3092\u4F7F\u7528\n                  if (typeof renderer.outputColorSpace !== 'undefined') {\n                    renderer.outputColorSpace = THREE.SRGBColorSpace;\n                  } else if (typeof renderer.outputEncoding !== 'undefined') {\n                    renderer.outputEncoding = THREE.sRGBEncoding;\n                  }\n                  \n                  container.appendChild(renderer.domElement);\n                  sendDebugMessage('WebGL\u30EC\u30F3\u30C0\u30E9\u30FC\u3092\u6B63\u5E38\u306B\u521D\u671F\u5316\u3057\u307E\u3057\u305F');\n                } catch (error) {\n                  showError(`WebGL\u30EC\u30F3\u30C0\u30E9\u30FC\u306E\u521D\u671F\u5316\u306B\u5931\u6557\u3057\u307E\u3057\u305F: ${error.message}`);\n                  return;\n                }\n                \n                try {\n                  // OrbitControls\u306E\u8A2D\u5B9A\n                  controls = new THREE.OrbitControls(camera, renderer.domElement);\n                  controls.target.set(0, 1, 0);\n                  controls.enableDamping = true;\n                  controls.dampingFactor = 0.05;\n                  \n                  // \u30B0\u30EA\u30C3\u30C9\u30D8\u30EB\u30D1\u30FC\n                  const gridHelper = new THREE.GridHelper(10, 10);\n                  scene.add(gridHelper);\n                  \n                  // \u8EF8\u30D8\u30EB\u30D1\u30FC\n                  const axesHelper = new THREE.AxesHelper(5);\n                  scene.add(axesHelper);\n                } catch (error) {\n                  showError(`\u30B7\u30FC\u30F3\u8981\u7D20\u306E\u521D\u671F\u5316\u306B\u5931\u6557\u3057\u307E\u3057\u305F: ${error.message}`);\n                  return;\n                }\n                \n                // \u30EA\u30B5\u30A4\u30BA\u30CF\u30F3\u30C9\u30E9\n                window.addEventListener('resize', onWindowResize);\n                \n                // \u30A2\u30CB\u30E1\u30FC\u30B7\u30E7\u30F3\u30EB\u30FC\u30D7\u958B\u59CB\n                animate();\n                \n                sendDebugMessage('Three.js \u521D\u671F\u5316\u5B8C\u4E86');\n                loadingElement.textContent = '\u30B7\u30FC\u30F3\u306E\u6E96\u5099\u304C\u3067\u304D\u307E\u3057\u305F\u3002VRM\u30E2\u30C7\u30EB\u3092\u8AAD\u307F\u8FBC\u3093\u3067\u3044\u307E\u3059...';\n              }\n              \n              // Base64\u30C7\u30FC\u30BF\u304B\u3089VRM\u3092\u8AAD\u307F\u8FBC\u3080\n              function loadVrmFromBase64(base64String, fileName) {\n                sendDebugMessage(`VRM\u30ED\u30FC\u30C9\u958B\u59CB: ${fileName}`);\n                loadingElement.style.display = 'block';\n                infoElement.textContent = `\u30D5\u30A1\u30A4\u30EB: ${fileName}`;\n                errorContainer.style.display = 'none';\n                \n                try {\n                  // base64\u3092\u30D0\u30A4\u30CA\u30EA\u30C7\u30FC\u30BF\u306B\u5909\u63DB\n                  const binary = atob(base64String);\n                  const bytes = new Uint8Array(binary.length);\n                  for (let i = 0; i < binary.length; i++) {\n                    bytes[i] = binary.charCodeAt(i);\n                  }\n                  \n                  const blob = new Blob([bytes], { type: 'application/octet-stream' });\n                  const url = URL.createObjectURL(blob);\n                  \n                  // \u65E2\u5B58\u306EVRM\u3092\u524A\u9664\n                  if (currentVrm) {\n                    scene.remove(currentVrm.scene);\n                    currentVrm = null;\n                  }\n                  \n                  // GLTFLoader\n                  const loader = new THREE.GLTFLoader();\n                  \n                  // VRM\u3092\u8AAD\u307F\u8FBC\u307F\n                  sendDebugMessage('VRM\u30D5\u30A1\u30A4\u30EB\u306E\u30ED\u30FC\u30C9\u958B\u59CB');\n                  loader.load(\n                    url,\n                    (gltf) => {\n                      sendDebugMessage('GLTF\u30E2\u30C7\u30EB\u306E\u30ED\u30FC\u30C9\u6210\u529F\u3001VRM\u5909\u63DB\u958B\u59CB');\n                      \n                      // VRM\u5909\u63DB\u306E\u8A73\u7D30\u3092\u30ED\u30B0\u51FA\u529B\n                      console.log('GLTF\u30C7\u30FC\u30BF:', gltf);\n                      \n                      // VRM\u30E9\u30A4\u30D6\u30E9\u30EA\u304C\u5229\u7528\u53EF\u80FD\u304B\u78BA\u8A8D\n                      if (typeof THREE.VRM === 'undefined') {\n                        sendDebugMessage('ERROR: THREE.VRM\u304C\u521D\u671F\u5316\u3055\u308C\u3066\u3044\u307E\u305B\u3093');\n                        \n                        // VRM\u30E9\u30A4\u30D6\u30E9\u30EA\u304C\u306A\u3044\u5834\u5408\u306FGLTF\u3068\u3057\u3066\u8868\u793A\n                        scene.add(gltf.scene);\n                        sendDebugMessage('GLTF\u30E2\u30C7\u30EB\u3092\u30B7\u30FC\u30F3\u306B\u76F4\u63A5\u8FFD\u52A0\uFF08VRM\u30E9\u30A4\u30D6\u30E9\u30EA\u306A\u3057\uFF09');\n                        \n                        loadingElement.style.display = 'none';\n                        infoElement.textContent = `\u30D5\u30A1\u30A4\u30EB: ${fileName} (GLTF\u3068\u3057\u3066\u8868\u793A)`;\n                        \n                        vscode.postMessage({\n                          type: 'warning',\n                          message: 'VRM\u30E9\u30A4\u30D6\u30E9\u30EA\u304C\u8AAD\u307F\u8FBC\u307E\u308C\u3066\u3044\u307E\u305B\u3093\u3002GLTF\u3068\u3057\u3066\u8868\u793A\u3057\u307E\u3059\u3002'\n                        });\n                        \n                        // Blob\u306E\u89E3\u653E\n                        URL.revokeObjectURL(url);\n                        return;\n                      }\n                      \n                      // VRM\u5909\u63DB\u3092\u8A66\u884C\n                      THREE.VRM.from(gltf)\n                        .then((vrm) => {\n                          sendDebugMessage('VRM\u5909\u63DB\u6210\u529F');\n                          // VRM\u30E2\u30C7\u30EB\u304C\u8AAD\u307F\u8FBC\u307E\u308C\u305F\n                          currentVrm = vrm;\n                          \n                          // \u30E2\u30C7\u30EB\u306E\u521D\u671F\u8A2D\u5B9A\n                          vrm.scene.rotation.y = Math.PI; // \u30E2\u30C7\u30EB\u3092\u524D\u5411\u304D\u306B\u3059\u308B\n                          \n                          // \u30B7\u30FC\u30F3\u306BVRM\u30E2\u30C7\u30EB\u3092\u8FFD\u52A0\n                          scene.add(vrm.scene);\n                          sendDebugMessage('VRM\u30E2\u30C7\u30EB\u3092\u30B7\u30FC\u30F3\u306B\u8FFD\u52A0');\n                          \n                          // \u30E2\u30C7\u30EB\u306E\u30DC\u30FC\u30F3\u3084\u69CB\u9020\u3092\u8ABF\u3079\u308B\n                          if (vrm && vrm.humanoid) {\n                            const bones = vrm.humanoid.humanBones;\n                            sendDebugMessage(`\u30E2\u30C7\u30EB\u306E\u30DC\u30FC\u30F3\u6570: ${Object.keys(bones).length}`);\n                          }\n                          \n                          // \u30E2\u30C7\u30EB\u304C\u8AAD\u307F\u8FBC\u307E\u308C\u305F\u3089\u30ED\u30FC\u30C7\u30A3\u30F3\u30B0\u8868\u793A\u3092\u96A0\u3059\n                          loadingElement.style.display = 'none';\n                          \n                          // \u30E2\u30C7\u30EB\u60C5\u5831\u306E\u8868\u793A\u3092\u66F4\u65B0\n                          const meta = vrm.meta;\n                          if (meta) {\n                            let infoText = `\u30E2\u30C7\u30EB\u540D: ${meta.title || 'Unknown'}`;\n                            if (meta.author) {\n                              infoText += ` | \u4F5C\u8005: ${meta.author}`;\n                            }\n                            infoElement.textContent = infoText;\n                            sendDebugMessage(`\u30E2\u30C7\u30EB\u60C5\u5831: ${infoText}`);\n                          }\n                          \n                          resetCamera();\n                          \n                          // Blob\u306E\u89E3\u653E\n                          URL.revokeObjectURL(url);\n                          \n                          // \u6210\u529F\u30E1\u30C3\u30BB\u30FC\u30B8\u3092\u62E1\u5F35\u6A5F\u80FD\u306B\u9001\u4FE1\n                          vscode.postMessage({\n                            type: 'info',\n                            message: 'VRM\u30E2\u30C7\u30EB\u3092\u8AAD\u307F\u8FBC\u307F\u307E\u3057\u305F\u3002'\n                          });\n                        })\n                        .catch((error) => {\n                          sendDebugMessage(`VRM\u5909\u63DB\u30A8\u30E9\u30FC: ${error.message}`);\n                          console.error('VRM\u5909\u63DB\u30A8\u30E9\u30FC:', error);\n                          \n                          // \u30A8\u30E9\u30FC\u6642\u306B\u4EE3\u66FF\u3068\u3057\u3066GLTF\u30E2\u30C7\u30EB\u3092\u305D\u306E\u307E\u307E\u8868\u793A\n                          try {\n                            scene.add(gltf.scene);\n                            sendDebugMessage('GLTF\u30E2\u30C7\u30EB\u3092\u30B7\u30FC\u30F3\u306B\u76F4\u63A5\u8FFD\u52A0\uFF08VRM\u5909\u63DB\u5931\u6557\u306E\u305F\u3081\uFF09');\n                            loadingElement.style.display = 'none';\n                            infoElement.textContent = `\u30D5\u30A1\u30A4\u30EB: ${fileName} (GLTF\u3068\u3057\u3066\u8868\u793A)`;\n                            \n                            // Blob\u306E\u89E3\u653E\n                            URL.revokeObjectURL(url);\n                          } catch (e) {\n                            showError(`\u30E2\u30C7\u30EB\u8868\u793A\u306B\u5931\u6557\u3057\u307E\u3057\u305F: ${e.message}`);\n                          }\n                          \n                          // \u30A8\u30E9\u30FC\u30E1\u30C3\u30BB\u30FC\u30B8\u3092\u8868\u793A\n                          showError(`VRM\u306E\u5909\u63DB\u306B\u5931\u6557\u3057\u307E\u3057\u305F: ${error.message}`);\n                        });\n                    },\n                    (progress) => {\n                      // \u9032\u6357\u72B6\u6CC1\u306E\u66F4\u65B0\n                      if (progress.total > 0) {\n                        const percentComplete = Math.round((progress.loaded / progress.total) * 100);\n                        loadingElement.textContent = `\u8AAD\u307F\u8FBC\u307F\u4E2D... ${percentComplete}%`;\n                        sendDebugMessage(`\u30ED\u30FC\u30C9\u9032\u6357: ${percentComplete}%`);\n                      }\n                    },\n                    (error) => {\n                      // \u30A8\u30E9\u30FC\u30CF\u30F3\u30C9\u30EA\u30F3\u30B0\n                      sendDebugMessage(`VRM\u30ED\u30FC\u30C9\u30A8\u30E9\u30FC: ${error.message}`);\n                      console.error('VRM\u306E\u8AAD\u307F\u8FBC\u307F\u30A8\u30E9\u30FC:', error);\n                      \n                      // \u30A8\u30E9\u30FC\u30E1\u30C3\u30BB\u30FC\u30B8\u3092\u8868\u793A\n                      showError(`VRM\u30D5\u30A1\u30A4\u30EB\u306E\u8AAD\u307F\u8FBC\u307F\u306B\u5931\u6557\u3057\u307E\u3057\u305F: ${error.message}`);\n                      \n                      // Blob\u306E\u89E3\u653E\n                      URL.revokeObjectURL(url);\n                    }\n                  );\n                } catch (error) {\n                  sendDebugMessage(`\u51E6\u7406\u30A8\u30E9\u30FC: ${error.message}`);\n                  console.error('\u30A8\u30E9\u30FC:', error);\n                  \n                  // \u30A8\u30E9\u30FC\u30E1\u30C3\u30BB\u30FC\u30B8\u3092\u8868\u793A\n                  showError(`\u51E6\u7406\u30A8\u30E9\u30FC: ${error.message}`);\n                }\n              }\n              \n              // \u30AB\u30E1\u30E9\u3092\u30EA\u30BB\u30C3\u30C8\n              function resetCamera() {\n                if (currentVrm) {\n                  // \u30E2\u30C7\u30EB\u306E\u4F4D\u7F6E\u3092\u4E2D\u5FC3\u306B\n                  camera.position.set(0, 1.5, 3);\n                  controls.target.set(0, 1, 0);\n                } else {\n                  camera.position.set(0, 1.5, 3);\n                  controls.target.set(0, 1, 0);\n                }\n                controls.update();\n                sendDebugMessage('\u30AB\u30E1\u30E9\u3092\u30EA\u30BB\u30C3\u30C8\u3057\u307E\u3057\u305F');\n              }\n              \n              // \u30A6\u30A3\u30F3\u30C9\u30A6\u30EA\u30B5\u30A4\u30BA\u6642\u306E\u51E6\u7406\n              function onWindowResize() {\n                camera.aspect = window.innerWidth / window.innerHeight;\n                camera.updateProjectionMatrix();\n                renderer.setSize(window.innerWidth, window.innerHeight);\n              }\n              \n              // \u30A2\u30CB\u30E1\u30FC\u30B7\u30E7\u30F3\u30EB\u30FC\u30D7\n              function animate() {\n                requestAnimationFrame(animate);\n                \n                try {\n                  // \u30B3\u30F3\u30C8\u30ED\u30FC\u30EB\u306E\u66F4\u65B0\n                  controls.update();\n                  \n                  // \u30EC\u30F3\u30C0\u30EA\u30F3\u30B0\n                  renderer.render(scene, camera);\n                } catch (e) {\n                  console.error('\u30EC\u30F3\u30C0\u30EA\u30F3\u30B0\u30A8\u30E9\u30FC:', e);\n                }\n              }\n              \n              // \u521D\u671F\u5316\u5B8C\u4E86\u30E1\u30C3\u30BB\u30FC\u30B8\n              sendDebugMessage('WebView\u521D\u671F\u5316\u5B8C\u4E86');\n            } catch (error) {\n              console.error('\u521D\u671F\u5316\u30A8\u30E9\u30FC:', error);\n              showError(`\u30D3\u30E5\u30FC\u30EF\u30FC\u306E\u521D\u671F\u5316\u306B\u5931\u6557\u3057\u307E\u3057\u305F: ${error.message}`);\n            }\n          }\n        </script>\n      </body>\n      </html>\n    ");
    };
    /**
     * ランダムなnonce値を生成する
     */
    VrmEditorProvider.prototype.getNonce = function () {
        var text = '';
        var possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';
        for (var i = 0; i < 32; i++) {
            text += possible.charAt(Math.floor(Math.random() * possible.length));
        }
        return text;
    };
    return VrmEditorProvider;
}());
//# sourceMappingURL=extension.js.map